<?php

namespace ApiBundle\Repository;
use ApiBundle\Entity\Answer;
use ApiBundle\Entity\Article;
use ApiLib\Interfaces\ArticleRepositoryInterface;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository implements ArticleRepositoryInterface
{
    public function listArticles()
    {
        return $this->findAllWithNoAnswers();
    }

    public function get($article_id)
    {
        return $this->find($article_id);
    }

    public function getAnswers($article_id)
    {
        return $this->find($article_id)->getAnswers();
    }

    public function saveAnswer(array $data)
    {
        $article = $this->find($data['article_id']);
        $answer = new Answer();
        $answer->setName($data['name']);
        $answer->setBody($data['body']);
        $answer->setRating($data['rating']);
        $answer->setArticle($article);
        $this->getEntityManager()->persist($answer);
        $this->getEntityManager()->flush();
        return true;
    }

    public function saveArticle(array $data)
    {
        $article = new Article();
        $article->setTitle($data['title']);
        $article->setExcerpt($data['excerpt']);
        $article->setBody($data['body']);
        $user = $this->getEntityManager()->getRepository('ApiBundle:User')->find(20);
        $article->setUser($user);
        $this->getEntityManager()->persist($article);
        $this->getEntityManager()->flush();
        return true;
    }

    private function findAllWithNoAnswers($limit = 10)
    {
        $qb = $this->createQueryBuilder("a")
            ->select('a, COUNT(1) no_answers')
            ->leftJoin('a.answers', 'article')
            ->groupBy('a.id')
            ->orderBy('a.id', 'DESC')
        ;

        if (is_numeric($limit))
        {
            $qb->setMaxResults($limit);
        }
        return $qb->getQuery()->getResult();
    }
}
